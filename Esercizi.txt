1. Somma dei Numeri (1 a N):  
   Creare un flowchart che, dato un numero N, sommi tutti i numeri da 1 a N utilizzando un ciclo e mostri il risultato.

2. Pari o Dispari:  
   Progettare un flowchart che, dato un numero, verifichi se è pari o dispari. Inserire una struttura condizionale per gestire la verifica.

3. Fattoriale di un Numero:  
   Realizzare un diagramma di flusso che calcoli il fattoriale di un numero N, impiegando un ciclo che moltiplichi i numeri da 1 a N.

4. Stampa Sequenza da 1 a 10:  
   Creare un flowchart che stampi in sequenza i numeri da 1 a 10, sfruttando un ciclo.

5. Controllo del Segno:  
   Progettare un diagramma che verifichi se un numero è positivo, negativo o zero, usando decisioni annidate per distinguere i casi.

6. Minimo di una Serie:  
   Creare un flowchart che legga una serie di numeri e, mediante un ciclo, ne determini il valore minimo.

7. Media di Numeri:  
   Realizzare un diagramma di flusso che, leggendo una serie di numeri, ne calcoli la media tramite accumulo e conteggio.

8. Verifica Login Semplificato:  
   Progettare un flowchart che simuli un controllo di accesso: se username e password coincidono con quelli attesi, visualizzare “Accesso Consentito”, altrimenti “Accesso Negato”. (Utilizzare condizioni annidate per controllare ciascun dato.)

9. Serie di Fibonacci:  
   Creare un flowchart che generi i primi N numeri della serie di Fibonacci, facendo uso di un ciclo per la generazione sequenziale.

10. Conteggio Occorrenze:  
    Progettare un diagramma che, dato un insieme di numeri, conti quante volte compare un numero specifico, utilizzando un ciclo per l’analisi e condizioni per il confronto.

------------------------------------------------------------------------------------------------------------------------------------------------

11. Numero Primo:  
    Creare un flowchart che, dato un numero, verifichi se esso è primo. Utilizzare un ciclo per controllare i possibili divisori e decisioni annidate per determinare la primalità.

12. Ordinamento di Tre Numeri:  
    Progettare un diagramma di flusso che, data l’immissione di tre numeri, li ordini in maniera crescente utilizzando decisioni annidate.

13. Massimo Comune Divisore (MCD):  
    Realizzare un flowchart che calcoli il MCD di due numeri impiegando il ciclo dell’algoritmo di Euclide, con decisioni per aggiornare i valori.

14. Numeri Palindromi:  
    Creare un diagramma di flusso che, dato un intervallo, identifichi e stampi tutti i numeri palindromi presenti, impiegando un ciclo per l’iterazione e condizioni per il controllo.

15. Menu Interattivo:  
    Progettare un flowchart per un semplice menu interattivo (ad esempio, scelta di operazioni matematiche). Utilizzare cicli per ripetere il menu e condizioni annidate per gestire le opzioni.

17. Tabella di Moltiplicazione:  
    Creare un flowchart che generi la tabella di moltiplicazione per un numero dato, usando un ciclo per iterare le moltiplicazioni.

18. Gioco "Indovina il Numero":  
    Progettare un diagramma di flusso che simuli un gioco in cui l’utente deve indovinare un numero segreto. Utilizzare un ciclo per gestire i tentativi e condizioni annidate per dare suggerimenti ("troppo alto" o "troppo basso").

20. Statistiche Voti:  
    Progettare un diagramma di flusso che legga una serie di voti e calcoli la media, la mediana e la modalità, utilizzando cicli per l’iterazione e decisioni per i confronti e i calcoli intermedi.

--------------------------------------------------------------------------------------------------------

21. Simulazione di Cassa Automatica:  
    Realizzare un flowchart che simuli una cassa automatica con transazioni multiple: gestione del saldo, prelievi e ricariche, utilizzando cicli per le operazioni ripetute e condizioni annidate per i controlli di sicurezza.

22. Viaggio del Commesso (Semplificato):  
    Progettare un diagramma di flusso che simuli il problema del "viaggio del commesso" in una versione semplificata, utilizzando cicli per esplorare le possibili rotte e condizioni per scegliere il percorso migliore.

23. Sistema di Equazioni Lineari (Iterativo):  
    Creare un flowchart per risolvere un sistema di equazioni lineari con un approccio iterativo (versione semplificata), utilizzando cicli per iterare le soluzioni e decisioni per verificare la convergenza.

24. Gestione Menu Bancario:  
    Realizzare un diagramma di flusso per un’applicazione bancaria con autenticazione, prelievi, depositi e controlli di sicurezza, sfruttando cicli per il menu principale e decisioni annidate per le operazioni specifiche.

25. Ricerca Binaria in Array Ordinato:  
    Progettare un flowchart che implementi una ricerca binaria in un array ordinato, utilizzando cicli per restringere l’intervallo e condizioni annidate per confrontare il valore ricercato.

26. Gioco a Quiz Interattivo:  
    Creare un diagramma di flusso per un gioco a quiz che gestisca domande multiple e calcoli un punteggio cumulativo, impiegando cicli per ripetere le domande e decisioni per verificare le risposte.

27. Torre di Hanoi:  
    Progettare un flowchart che risolva il problema della Torre di Hanoi per un numero variabile di dischi. Utilizzare la ricorsione o cicli con decisioni annidate per simulare gli spostamenti.

28. Percorso di un Robot nel Labirinto:  
    Creare un diagramma di flusso che gestisca il percorso di un robot in un labirinto. Utilizzare cicli per tentare varie direzioni e condizioni annidate per controllare se il percorso è libero o bloccato.

29. Algoritmo di Ordinamento (Bubble Sort):  
    Realizzare un flowchart che simuli il Bubble Sort per ordinare un array. Utilizzare cicli per iterare sull’array e condizioni per effettuare lo scambio dei valori quando necessario.

30. Gestione Ordini in un Ristorante:  
    Progettare un diagramma di flusso che simuli un sistema di gestione degli ordini in un ristorante. Il flowchart dovrà gestire l’inserimento degli ordini, la conferma dei pagamenti e l’aggiornamento dello stato dei tavoli, impiegando cicli per la gestione degli ordini ripetuti e decisioni annidate per i controlli.
